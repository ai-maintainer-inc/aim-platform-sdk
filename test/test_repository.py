# coding: utf-8

"""
    Marketplace API

    An API for the AI Maintainer Marketplace

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

import aim_platform_sdk
from aim_platform_sdk.models.repository import Repository  # noqa: E501
from aim_platform_sdk.rest import ApiException

class TestRepository(unittest.TestCase):
    """Repository unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test Repository
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Repository`
        """
        model = aim_platform_sdk.models.repository.Repository()  # noqa: E501
        if include_optional :
            return Repository(
                repository_id = None, 
                owner_id = None, 
                owner_name = None, 
                repository_name = None, 
                created_at = None, 
                updated_at = None, 
                is_public = None
            )
        else :
            return Repository(
                repository_id = None,
                owner_id = None,
                owner_name = None,
                repository_name = None,
                created_at = None,
                updated_at = None,
                is_public = None,
        )
        """

    def testRepository(self):
        """Test Repository"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
